name: Publish to GHCR

on:
  release:
    types: [created]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: janeirodigital/sai-service
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - authorization-agent
          - application
          - data-model
          - test-utils
          - utils
          - service
          - api-messages
    steps:
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Modify .npmrc
        run: echo '//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' >> .npmrc

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpx turbo run build

      - name: ZIP package
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && matrix.package == 'service'
        run: |
          mkdir dist
          mv node_modules/ dist/
          mv packages/ dist/
          mv deploy/ dist/
          cp package.json dist/
          cp Dockerfile dist/
          tar -zcvf dist.tar.gz dist

      - name: Save build artifact
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && matrix.package == 'service'
        uses: actions/upload-artifact@v3
        with:
          name: built-packages
          path: dist.tar.gz

  publish:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: built-packages

      - name: Decompress package
        run: tar -xvzf dist.tar.gz --strip-components 1

      - name: Login to GHCR
        uses: docker/login-action@v4
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
